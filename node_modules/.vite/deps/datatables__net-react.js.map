{
  "version": 3,
  "sources": ["../../datatables.net-react/src/components/DataTable/events.ts", "../../datatables.net-react/src/components/DataTable/index.tsx"],
  "sourcesContent": ["\n/*\n * List of events that DataTables can fire, so they can re-exported to React\n */\nexport default [\n\t'autoFill',\n\t'preAutoFill',\n\t'buttons-action',\n\t'buttons-processing',\n\t'column-reorder',\n\t'columns-reordered',\n\t'childRow',\n\t'column-sizing',\n\t'column-visibility',\n\t'destroy',\n\t'draw',\n\t'dt-error',\n\t'info',\n\t'init',\n\t'length',\n\t'options',\n\t'order',\n\t'page',\n\t'preDraw',\n\t'preInit',\n\t'preXhr',\n\t'processing',\n\t'requestChild',\n\t'search',\n\t'stateLoaded',\n\t'stateLoadParams',\n\t'stateSaveParams',\n\t'xhr',\n\t'key',\n\t'key-blur',\n\t'key-focus',\n\t'key-prefocus',\n\t'key-refocus',\n\t'key-return-submit',\n\t'responsive-display',\n\t'responsive-resize',\n\t'rowgroup-datasrc',\n\t'pre-row-reorder',\n\t'row-reorder',\n\t'row-reorder-canceled',\n\t'row-reorder-changed',\n\t'row-reordered',\n\t'dtsb-inserted',\n\t'deselect',\n\t'select',\n\t'select-blur',\n\t'selectItems',\n\t'selectStyle',\n\t'user-select',\n\t'stateRestore-change',\n];\n", "import {createRoot, Root} from 'react-dom/client';\nimport {\n\tforwardRef,\n\tuseEffect,\n\tuseImperativeHandle,\n\tuseRef,\n\tReactNode,\n\tForwardRefExoticComponent\n} from 'react';\n\nimport dtEvents from './events';\n\nimport type DTType from 'datatables.net';\nimport type {Api as DTApiType, Config as DTConfig} from 'datatables.net';\n\nlet DataTablesLib: DTType<any> | null = null;\n\ntype SlotCache = Root[];\n\nexport type DataTableSlot =\n\t| ((data: any, row: any) => React.JSX.Element)\n\t| ((data: any, type: string, row: any) => any)\n\t| ((data: any, type: string, row: any, meta: object) => any);\n\nexport type DataTableSlots = {\n\t[key: string | number]: DataTableSlot;\n};\n\nexport interface DataTableProps {\n\t/** DataTables Ajax configuration */\n\tajax?: DTConfig['ajax'];\n\n\t/** Table header */\n\tchildren?: ReactNode | undefined;\n\n\t/** Class to assign to the `<table>` */\n\tclassName?: string;\n\n\t/** DataTables column configuration */\n\tcolumns?: DTConfig['columns'];\n\n\t/** Data to populate the DataTable */\n\tdata?: any[];\n\n\t/** ID to assign to the `<table>` */\n\tid?: string;\n\n\t/**\n\t * DataTables configuration object.\n\t *\n\t * The properties `ajax`, `columns` and `data` will be merged into this\n\t * object. They can be provided using their individual properties, or\n\t * via this object. The individual properties take priority.\n\t */\n\toptions?: DTConfig;\n\n\t/**\n\t * Rendering slot function to use in a column. The key denotes where the\n\t * slot will be rendered - as an integer that is the column index, while\n\t * as a string it is the column's name (from `columns.name`). Each slot\n\t * is a function that takes two parameters and returns the element to\n\t * render.\n\t */\n\tslots?: DataTableSlots;\n\n\t/**\n\t * Event listeners. Please refer to the DT docs for details on the event\n\t * listeners available. The names are camelCase here.\n\t */\n\t[key: `on${string}`]: Function;\n}\n\nexport interface DataTableRef {\n\t/**\n\t * Get the DataTables API instance from the component. Can be `null` if not\n\t * yet rendered.\n\t *\n\t * @returns DataTables API instance\n\t */\n\tdt: () => DTApiType | null;\n}\n\n/**\n * DataTables.net component for React.\n * \n * Typically a child will be given to the component to define the table header,\n * although this is option if you use the `columns.title` option of DataTables\n * to define the columns and their titles.\n * \n * See https://datatables.net/manual/react for details on how to use this\n * component.\n */\nexport interface DataTableComponent\n\textends ForwardRefExoticComponent<DataTableProps & React.RefAttributes<DataTableRef>> {\n\t/**\n\t * Set the DataTables library to use for this component (e.g. the result from\n\t * `import DT from 'datatables.net-dt'` or `import DT from 'datatables.net-bs5'`).\n\t *\n\t * @param dtLib DataTables core library\n\t * @returns\n\t */\n\tuse: (dtLib: DTType<any>) => void;\n}\n\n// any here, so we can assign the `use` later - it is really a DataTableComponent though\nconst Component: any = forwardRef<DataTableRef, DataTableProps>(function DataTable(props, ref) {\n\tconst tableEl = useRef<HTMLTableElement | null>(null);\n\tconst table = useRef<DTApiType<any> | null>(null);\n\tconst options = useRef(props.options ?? {});\n\tconst cache = useRef<SlotCache>([]);\n\n\t// Expose the DataTables API via a reference\n\tuseImperativeHandle(ref, () => ({\n\t\tdt: () => table.current\n\t}));\n\n\t// Expose some of the more common settings as props\n\tif (props.data) {\n\t\toptions.current.data = props.data;\n\t}\n\n\tif (props.ajax) {\n\t\toptions.current.ajax = props.ajax;\n\t}\n\n\tif (props.columns) {\n\t\toptions.current.columns = props.columns;\n\t}\n\n\t// If slots are defined, create `columnDefs` entries for them to apply\n\t// to their target columns.\n\tif (props.slots) {\n\t\tapplySlots(cache.current, options.current, props.slots);\n\t}\n\n\t// Create the DataTable when the `<table>` is ready in the document\n\tuseEffect(() => {\n\t\tif (!DataTablesLib) {\n\t\t\tthrow new Error(\n\t\t\t\t'DataTables library not set. See https://datatables.net/tn/23 for details.'\n\t\t\t);\n\t\t}\n\n\t\tif (tableEl.current) {\n\t\t\tconst $ = DataTablesLib.use('jq') as unknown as JQueryStatic;\n\t\t\tconst table$ = $(tableEl.current);\n\n\t\t\t// Bind to DataTable's events so they can be listened to with an `on` property\n\t\t\tdtEvents.forEach((name) => {\n\t\t\t\t// Create the `on*` name from the DataTables event name, which is camelCase\n\t\t\t\t// and an `on` prefix.\n\t\t\t\tconst onName =\n\t\t\t\t\t'on' +\n\t\t\t\t\tname[0]!.toUpperCase() +\n\t\t\t\t\tname.slice(1).replace(/-[a-z]/g, (match) => match[1]!.toUpperCase());\n\n\t\t\t\tif ((props as any)[onName]) {\n\t\t\t\t\ttable$.on(name + '.dt', (props as any)[onName]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Initialise the DataTable\n\t\t\ttable.current = new DataTablesLib(tableEl.current, options.current);\n\t\t}\n\n\t\t// Unmount tidy up\n\t\treturn () => {\n\t\t\tif (table.current) {\n\t\t\t\t// Unmount the created roots when this component unmounts\n\t\t\t\tlet roots = cache.current.slice();\n\t\t\t\tcache.current.length = 0;\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\troots.forEach((r) => {\n\t\t\t\t\t\tr.unmount();\n\t\t\t\t\t});\n\t\t\t\t}, 250);\n\n\t\t\t\ttable.current.destroy();\n\t\t\t\ttable.current = null;\n\t\t\t}\n\t\t};\n\t}, []);\n\n\t// On data change, clear and redraw\n\tuseEffect(() => {\n\t\tif (props.data) {\n\t\t\tif (table.current) {\n\t\t\t\ttable.current.clear();\n\t\t\t\ttable.current.rows.add(props.data).draw(false);\n\t\t\t}\n\t\t}\n\t}, [props.data]);\n\n\treturn (\n\t\t<div>\n\t\t\t<table ref={tableEl} className={props.className ?? ''} id={props.id ?? ''}>\n\t\t\t\t{props.children ?? null}\n\t\t\t</table>\n\t\t</div>\n\t);\n});\n\nComponent.use = function (lib: DTType<any>) {\n\tDataTablesLib = lib;\n};\n\nconst Exporter: DataTableComponent = Component;\n\nexport default Exporter;\n\n/**\n * Loop over the slots defined and apply them to their columns,\n * targeting based on the slot name (object key).\n *\n * @param options DataTables configuration object\n * @param slots Props passed in\n */\nfunction applySlots(cache: SlotCache, options: DTConfig, slots: DataTableSlots) {\n\tif (!options.columnDefs) {\n\t\toptions.columnDefs = [];\n\t}\n\n\tObject.keys(slots).forEach((name) => {\n\t\tlet slot = slots[name];\n\n\t\tif (!slot) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Simple column index\n\t\tif (name.match(/^-?\\d+$/)) {\n\t\t\t// Note that unshift is used to make sure that this property is\n\t\t\t// applied in DataTables _after_ the end user's own options, if\n\t\t\t// they've provided any.\n\t\t\toptions.columnDefs!.unshift({\n\t\t\t\ttarget: parseInt(name),\n\t\t\t\trender: slotRenderer(cache, slot)\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\t// Column name\n\t\t\toptions.columnDefs!.unshift({\n\t\t\t\ttarget: name + ':name',\n\t\t\t\trender: slotRenderer(cache, slot)\n\t\t\t});\n\t\t}\n\t});\n}\n\n/**\n * Create a rendering function that will create a React component\n * for a cell's rendering function.\n *\n * @param slot Function to create react component or orthogonal data\n * @returns Rendering function\n */\nfunction slotRenderer(cache: SlotCache, slot: DataTableSlot) {\n\treturn function (data: any, type: string, row: any, meta: object) {\n\t        if (slot.length === 4) {\n\t\t\tlet result = slot(data, type, row, meta);\n\t\t\t\n\t\t\treturn result['$$typeof'] ? renderJsx(cache, result) : result;\n\t\t} else if (slot.length === 3) {\n\t\t\t// The function takes three parameters so it allows for\n\t\t\t// orthogonal data - not possible to cache the response\n\t\t\tlet result = slot(data, type, row, meta);\n\n\t\t\treturn result['$$typeof'] ? renderJsx(cache, result) : result;\n\t\t}\n\n\t\t// Otherwise, we are expecting a JSX return from the function every\n\t\t// time and we can cache it. Note the `slot as any` - Typescript\n\t\t// doesn't appear to like the two argument option for `DataTableSlot`.\n\t\treturn slotCache(cache, () => (slot as any)(data, row));\n\t};\n}\n\n/**\n * Render a slot's element and cache it\n */\nfunction slotCache(cache: SlotCache, create: Function) {\n\t// Execute the rendering function\n\tlet result = create();\n\n\t// If the result is a JSX element, we need to render and then cache it\n\tif (result['$$typeof']) {\n\t\tlet div = renderJsx(cache, result);\n\n\t\treturn div;\n\t}\n\n\t// Any other data just gets returned\n\treturn result;\n}\n\n/**\n * Render JSX into a div which can be shown in a cell\n */\nfunction renderJsx(cache: SlotCache, jsx: React.JSX.Element): HTMLDivElement {\n\tlet div = document.createElement('div');\n\tlet root = createRoot(div);\n\n\troot.render(jsx);\n\tcache.push(root);\n\n\treturn div;\n}\n"],
  "mappings": "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",
  "names": ["_jsx", "jsx"]
}
