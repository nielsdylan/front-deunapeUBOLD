{"version":3,"file":"react-use-wizard.cjs.production.min.js","sources":["../src/wizardContext.ts","../src/wizard.tsx","../src/useWizard.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { WizardValues } from './types';\n\nconst WizardContext = React.createContext<WizardValues | null>(null);\n\nif (__DEV__) {\n  WizardContext.displayName = 'WizardContext';\n}\n\nexport default WizardContext;\n","import * as React from 'react';\n\nimport * as logger from './logger';\nimport { Handler, WizardProps } from './types';\nimport WizardContext from './wizardContext';\n\nconst Wizard: React.FC<React.PropsWithChildren<WizardProps>> = React.memo(\n  ({\n    header,\n    footer,\n    children,\n    onStepChange,\n    wrapper: Wrapper,\n    startIndex = 0,\n  }) => {\n    const [activeStep, setActiveStep] = React.useState(startIndex);\n    const [isLoading, setIsLoading] = React.useState(false);\n    const hasNextStep = React.useRef(true);\n    const hasPreviousStep = React.useRef(false);\n    const nextStepHandler = React.useRef<Handler>(() => {});\n    const stepCount = React.Children.toArray(children).length;\n\n    hasNextStep.current = activeStep < stepCount - 1;\n    hasPreviousStep.current = activeStep > 0;\n\n    const goToNextStep = React.useCallback(() => {\n      if (hasNextStep.current) {\n        const newActiveStepIndex = activeStep + 1;\n\n        setActiveStep(newActiveStepIndex);\n        onStepChange?.(newActiveStepIndex);\n      }\n    }, [activeStep, onStepChange]);\n\n    const goToPreviousStep = React.useCallback(() => {\n      if (hasPreviousStep.current) {\n        nextStepHandler.current = null;\n        const newActiveStepIndex = activeStep - 1;\n\n        setActiveStep(newActiveStepIndex);\n        onStepChange?.(newActiveStepIndex);\n      }\n    }, [activeStep, onStepChange]);\n\n    const goToStep = React.useCallback(\n      (stepIndex: number) => {\n        if (stepIndex >= 0 && stepIndex < stepCount) {\n          nextStepHandler.current = null;\n          setActiveStep(stepIndex);\n          onStepChange?.(stepIndex);\n        } else {\n          if (__DEV__) {\n            logger.log(\n              'warn',\n              [\n                `Invalid step index [${stepIndex}] passed to 'goToStep'. `,\n                `Ensure the given stepIndex is not out of boundaries.`,\n              ].join(''),\n            );\n          }\n        }\n      },\n      [stepCount, onStepChange],\n    );\n\n    // Callback to attach the step handler\n    const handleStep = React.useRef((handler: Handler) => {\n      nextStepHandler.current = handler;\n    });\n\n    const doNextStep = React.useCallback(async () => {\n      if (hasNextStep.current && nextStepHandler.current) {\n        try {\n          setIsLoading(true);\n          await nextStepHandler.current();\n          setIsLoading(false);\n          nextStepHandler.current = null;\n          goToNextStep();\n        } catch (error) {\n          setIsLoading(false);\n          throw error;\n        }\n      } else {\n        goToNextStep();\n      }\n    }, [goToNextStep]);\n\n    const wizardValue = React.useMemo(\n      () => ({\n        nextStep: doNextStep,\n        previousStep: goToPreviousStep,\n        handleStep: handleStep.current,\n        isLoading,\n        activeStep,\n        stepCount,\n        isFirstStep: !hasPreviousStep.current,\n        isLastStep: !hasNextStep.current,\n        goToStep,\n      }),\n      [\n        doNextStep,\n        goToPreviousStep,\n        isLoading,\n        activeStep,\n        stepCount,\n        goToStep,\n      ],\n    );\n\n    const activeStepContent = React.useMemo(() => {\n      const reactChildren = React.Children.toArray(children);\n\n      if (__DEV__) {\n        // No steps passed\n        if (reactChildren.length === 0) {\n          logger.log(\n            'warn',\n            'Make sure to pass your steps as children in your <Wizard>',\n          );\n        }\n        // The passed start index is invalid\n        if (activeStep > reactChildren.length) {\n          logger.log('warn', 'An invalid startIndex is passed to <Wizard>');\n        }\n        // Invalid header element\n        if (header && !React.isValidElement(header)) {\n          logger.log('error', 'Invalid header passed to <Wizard>');\n        }\n        // Invalid footer element\n        if (footer && !React.isValidElement(footer)) {\n          logger.log('error', 'Invalid footer passed to <Wizard>');\n        }\n      }\n\n      return reactChildren[activeStep];\n    }, [activeStep, children, header, footer]);\n\n    const enhancedActiveStepContent = React.useMemo(\n      () =>\n        Wrapper\n          ? React.cloneElement(Wrapper, { children: activeStepContent })\n          : activeStepContent,\n      [Wrapper, activeStepContent],\n    );\n\n    return (\n      <WizardContext.Provider value={wizardValue}>\n        {header}\n        {enhancedActiveStepContent}\n        {footer}\n      </WizardContext.Provider>\n    );\n  },\n);\n\nexport default Wizard;\n","import * as React from 'react';\n\nimport { WizardValues } from './types';\nimport WizardContext from './wizardContext';\n\nconst useWizard = () => {\n  const context = React.useContext(WizardContext);\n\n  if (!context && __DEV__) {\n    throw Error('Wrap your step with `Wizard`');\n  } else {\n    return context as WizardValues;\n  }\n};\n\nexport default useWizard;\n"],"names":["WizardContext","React","header","footer","children","onStepChange","wrapper","Wrapper","startIndex","activeStep","setActiveStep","isLoading","setIsLoading","hasNextStep","hasPreviousStep","nextStepHandler","stepCount","toArray","length","current","goToNextStep","newActiveStepIndex","goToPreviousStep","goToStep","stepIndex","handleStep","handler","doNextStep","async","error","wizardValue","nextStep","previousStep","isFirstStep","isLastStep","activeStepContent","enhancedActiveStepContent","Provider","value"],"mappings":"2FAIA,MAAMA,EAAgBC,gBAAyC,qBCEAA,OAC7D,EACEC,OAAAA,EACAC,OAAAA,EACAC,SAAAA,EACAC,aAAAA,EACAC,QAASC,EACTC,WAAAA,EAAa,YAENC,EAAYC,GAAiBT,WAAeO,IAC5CG,EAAWC,GAAgBX,YAAe,GAC3CY,EAAcZ,UAAa,GAC3Ba,EAAkBb,UAAa,GAC/Bc,EAAkBd,SAAsB,QACxCe,EAAYf,WAAegB,QAAQb,GAAUc,OAEnDL,EAAYM,QAAUV,EAAaO,EAAY,EAC/CF,EAAgBK,QAAUV,EAAa,QAEjCW,EAAenB,cAAkB,QACjCY,EAAYM,QAAS,OACjBE,EAAqBZ,EAAa,EAExCC,EAAcW,SACdhB,GAAAA,EAAegB,KAEhB,CAACZ,EAAYJ,IAEViB,EAAmBrB,cAAkB,QACrCa,EAAgBK,QAAS,CAC3BJ,EAAgBI,QAAU,WACpBE,EAAqBZ,EAAa,EAExCC,EAAcW,SACdhB,GAAAA,EAAegB,KAEhB,CAACZ,EAAYJ,IAEVkB,EAAWtB,cACduB,IACKA,GAAa,GAAKA,EAAYR,IAChCD,EAAgBI,QAAU,KAC1BT,EAAcc,SACdnB,GAAAA,EAAemB,KAanB,CAACR,EAAWX,IAIRoB,EAAaxB,SAAcyB,IAC/BX,EAAgBI,QAAUO,IAGtBC,EAAa1B,cAAkB2B,aAC/Bf,EAAYM,SAAWJ,EAAgBI,YAEvCP,GAAa,SACPG,EAAgBI,UACtBP,GAAa,GACbG,EAAgBI,QAAU,KAC1BC,IACA,MAAOS,SACPjB,GAAa,GACPiB,OAGRT,KAED,CAACA,IAEEU,EAAc7B,UAClB,MACE8B,SAAUJ,EACVK,aAAcV,EACdG,WAAYA,EAAWN,QACvBR,UAAAA,EACAF,WAAAA,EACAO,UAAAA,EACAiB,aAAcnB,EAAgBK,QAC9Be,YAAarB,EAAYM,QACzBI,SAAAA,IAEF,CACEI,EACAL,EACAX,EACAF,EACAO,EACAO,IAIEY,EAAoBlC,UAAc,IAChBA,WAAegB,QAAQb,GAwBxBK,GACpB,CAACA,EAAYL,EAAUF,EAAQC,IAE5BiC,EAA4BnC,UAChC,IACEM,EACIN,eAAmBM,EAAS,CAAEH,SAAU+B,IACxCA,EACN,CAAC5B,EAAS4B,WAIVlC,gBAACD,EAAcqC,UAASC,MAAOR,GAC5B5B,EACAkC,EACAjC,uBChJS,IACAF,aAAiBD"}